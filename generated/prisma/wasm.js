
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  name: 'name',
  age: 'age',
  fatherName: 'fatherName',
  emergencyContact: 'emergencyContact',
  role: 'role'
};

exports.Prisma.AdminScalarFieldEnum = {
  adminId: 'adminId',
  userId: 'userId'
};

exports.Prisma.TeacherScalarFieldEnum = {
  teacherId: 'teacherId',
  userId: 'userId'
};

exports.Prisma.ClassScalarFieldEnum = {
  classId: 'classId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  className: 'className',
  classSection: 'classSection',
  teacherId: 'teacherId'
};

exports.Prisma.StudentScalarFieldEnum = {
  studentId: 'studentId',
  userId: 'userId',
  classId: 'classId',
  feesId: 'feesId',
  attendanceId: 'attendanceId'
};

exports.Prisma.FeesScalarFieldEnum = {
  feesId: 'feesId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  fees_month: 'fees_month',
  fees_year: 'fees_year',
  fees_total_amount: 'fees_total_amount',
  fees_remaining_amount: 'fees_remaining_amount',
  fess_paid_on: 'fess_paid_on'
};

exports.Prisma.AttendanceScalarFieldEnum = {
  attendanceId: 'attendanceId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  attendance_date: 'attendance_date'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  name: 'name',
  fatherName: 'fatherName',
  emergencyContact: 'emergencyContact'
};

exports.Prisma.ClassOrderByRelevanceFieldEnum = {
  className: 'className'
};

exports.Prisma.FeesOrderByRelevanceFieldEnum = {
  fees_year: 'fees_year'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  TEACHER: 'TEACHER',
  STUDENT: 'STUDENT'
};

exports.Section = exports.$Enums.Section = {
  A: 'A',
  B: 'B'
};

exports.Month = exports.$Enums.Month = {
  JANUARY: 'JANUARY',
  FEBRUARY: 'FEBRUARY',
  MARCH: 'MARCH',
  APRIL: 'APRIL',
  MAY: 'MAY',
  JUNE: 'JUNE',
  JULY: 'JULY',
  AUGUST: 'AUGUST',
  SEPTEMBER: 'SEPTEMBER',
  OCTOBER: 'OCTOBER',
  NOVEMBER: 'NOVEMBER',
  DECEMBER: 'DECEMBER'
};

exports.Prisma.ModelName = {
  User: 'User',
  Admin: 'Admin',
  Teacher: 'Teacher',
  Class: 'Class',
  Student: 'Student',
  Fees: 'Fees',
  Attendance: 'Attendance'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\LENOVO\\Desktop\\ainss project\\ainss_backend\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\LENOVO\\Desktop\\ainss project\\ainss_backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  ADMIN\n  TEACHER\n  STUDENT\n}\n\nenum Section {\n  A\n  B\n}\n\nenum Month {\n  JANUARY\n  FEBRUARY\n  MARCH\n  APRIL\n  MAY\n  JUNE\n  JULY\n  AUGUST\n  SEPTEMBER\n  OCTOBER\n  NOVEMBER\n  DECEMBER\n}\n\nmodel User {\n  id Int @id @default(autoincrement())\n\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n  name             String\n  age              Int\n  fatherName       String\n  emergencyContact String?\n  role             Role\n  admin            Admin?\n  teacher          Teacher?\n  student          Student?\n}\n\nmodel Admin {\n  adminId Int @id @default(autoincrement())\n\n  userId Int @unique\n\n  user User @relation(fields: [userId], references: [id])\n}\n\nmodel Teacher {\n  teacherId Int @id @default(autoincrement())\n\n  userId Int    @unique\n  user   User   @relation(fields: [userId], references: [id])\n  class  Class?\n}\n\nmodel Class {\n  classId      Int       @id @default(autoincrement())\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n  className    String\n  classSection Section\n  teacherId    Int       @unique\n  teacher      Teacher   @relation(fields: [teacherId], references: [teacherId])\n  student      Student[]\n}\n\nmodel Student {\n  studentId    Int        @id @default(autoincrement())\n  userId       Int        @unique\n  user         User       @relation(fields: [userId], references: [id])\n  classId      Int        @unique\n  class        Class      @relation(fields: [classId], references: [classId])\n  feesId       Int        @unique\n  fees         Fees       @relation(fields: [feesId], references: [feesId])\n  attendanceId Int        @unique\n  attendance   Attendance @relation(fields: [attendanceId], references: [attendanceId])\n}\n\nmodel Fees {\n  feesId                Int       @id @default(autoincrement())\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt\n  fees_month            Month\n  fees_year             String\n  fees_total_amount     Float\n  fees_remaining_amount Float\n  fess_paid_on          DateTime\n  Student               Student[]\n}\n\nmodel Attendance {\n  attendanceId    Int       @id @default(autoincrement())\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n  attendance_date DateTime  @unique\n  student         Student[]\n}\n\n// model User {\n//   id String @id @default(cuid())\n//   name String\n//   age Int\n//   fatherName String\n//   emergencyContact String?\n//   role Role\n//   teacher Teacher?\n//   student Student?\n// }\n\n// model Teacher{\n//   id String @id @default(cuid())\n//   userId String @unique\n//   user User @relation(fields: [userId], references: [id])\n// }\n\n// model Student{\n//   id String @id @default(cuid())\n//   userId String @unique\n//   user User @relation(fields: [userId], references: [id])\n//   class\n// }\n\n// model Class {\n//   classId String @id @unique @default(cuid())\n//   name String @unique\n//   section Section\n//   students Student[]\n// }\n",
  "inlineSchemaHash": "3e43523425c241ebcaa1285bd167e45c9b5df9351d8dd9a7dc205a281f014ba3",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fatherName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToUser\"},{\"name\":\"teacher\",\"kind\":\"object\",\"type\":\"Teacher\",\"relationName\":\"TeacherToUser\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"Student\",\"relationName\":\"StudentToUser\"}],\"dbName\":null},\"Admin\":{\"fields\":[{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminToUser\"}],\"dbName\":null},\"Teacher\":{\"fields\":[{\"name\":\"teacherId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeacherToUser\"},{\"name\":\"class\",\"kind\":\"object\",\"type\":\"Class\",\"relationName\":\"ClassToTeacher\"}],\"dbName\":null},\"Class\":{\"fields\":[{\"name\":\"classId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"className\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"classSection\",\"kind\":\"enum\",\"type\":\"Section\"},{\"name\":\"teacherId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"teacher\",\"kind\":\"object\",\"type\":\"Teacher\",\"relationName\":\"ClassToTeacher\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"Student\",\"relationName\":\"ClassToStudent\"}],\"dbName\":null},\"Student\":{\"fields\":[{\"name\":\"studentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StudentToUser\"},{\"name\":\"classId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"class\",\"kind\":\"object\",\"type\":\"Class\",\"relationName\":\"ClassToStudent\"},{\"name\":\"feesId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fees\",\"kind\":\"object\",\"type\":\"Fees\",\"relationName\":\"FeesToStudent\"},{\"name\":\"attendanceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"attendance\",\"kind\":\"object\",\"type\":\"Attendance\",\"relationName\":\"AttendanceToStudent\"}],\"dbName\":null},\"Fees\":{\"fields\":[{\"name\":\"feesId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fees_month\",\"kind\":\"enum\",\"type\":\"Month\"},{\"name\":\"fees_year\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fees_total_amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"fees_remaining_amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"fess_paid_on\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Student\",\"kind\":\"object\",\"type\":\"Student\",\"relationName\":\"FeesToStudent\"}],\"dbName\":null},\"Attendance\":{\"fields\":[{\"name\":\"attendanceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attendance_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"Student\",\"relationName\":\"AttendanceToStudent\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

